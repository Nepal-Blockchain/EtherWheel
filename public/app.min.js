!function(){"use strict";angular.module("ether-spinner",["ngRoute","chart.js","rzModule"]).config(["$routeProvider",function(e){e.otherwise({redirectTo:"/"})}])}(),function(){"use strict";function e(e,t,n){function a(){if(n.isConnected()){var e=[{constant:!0,inputs:[{name:"",type:"address"}],name:"stakes",outputs:[{name:"",type:"uint256"}],type:"function"},{constant:!0,inputs:[{name:"",type:"uint256"}],name:"stakeholders",outputs:[{name:"",type:"address"}],type:"function"},{constant:!0,inputs:[],name:"goal",outputs:[{name:"",type:"uint256"}],type:"function"},{constant:!1,inputs:[],name:"refundStake",outputs:[],type:"function"},{constant:!1,inputs:[],name:"destroy",outputs:[],type:"function"},{constant:!0,inputs:[],name:"increment",outputs:[{name:"",type:"uint256"}],type:"function"},{constant:!0,inputs:[],name:"numStakeholders",outputs:[{name:"",type:"uint256"}],type:"function"},{constant:!1,inputs:[{name:"rejectPartialBets",type:"bool"}],name:"buyStake",outputs:[],type:"function"},{constant:!0,inputs:[{name:"",type:"uint256"}],name:"recentWins",outputs:[{name:"winner",type:"address"},{name:"timestamp",type:"uint256"},{name:"stake",type:"uint256"}],type:"function"},{constant:!0,inputs:[],name:"host",outputs:[{name:"",type:"address"}],type:"function"},{inputs:[{name:"_goalInFinney",type:"uint256"},{name:"_incrementInFinney",type:"uint256"},{name:"_recentWinsCount",type:"uint8"}],type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,name:"winner",type:"address"},{indexed:!1,name:"timestamp",type:"uint256"},{indexed:!1,name:"stake",type:"uint256"}],name:"Won",type:"event"},{anonymous:!1,inputs:[{indexed:!1,name:"stakeholder",type:"address"}],name:"ChangedStake",type:"event"}],t=n.web3.eth.contract(e);m=t.at(l),c.goal=n.web3.fromWei(m.goal(),"ether").toString(),c.sliderStep=n.web3.fromWei(m.increment(),"ether").toString(),c.accounts=n.web3.eth.accounts,c.selectedAccount=n.web3.eth.defaultAccount,c.selectedAccount||(c.selectedAccount=n.web3.eth.coinbase),o(),s(),u();var a=m.ChangedStake();a.watch(i);var p=m.Won();p.watch(r)}}function o(){if(n.isConnected()){var e=n.web3.eth.getBalance(l),t=n.web3.fromWei(e,"ether");c.balance=parseFloat(t.toString())}}function s(){if(n.isConnected()){c.wheelLabels.length=0,c.wheelData.length=0,c.wheelColours.length=0;for(var e=m.numStakeholders(),t=0;e>t;++t){var a=m.stakeholders(t);c.wheelLabels.push(a.toString()),c.wheelData.push(n.web3.fromWei(m.stakes(a),"ether")),c.wheelColours.push("#C99D66")}c.wheelLabels.push("Empty"),c.wheelData.push(n.web3.fromWei(m.goal()-n.web3.eth.getBalance(l),"ether")),c.wheelColours.push(p)}}function u(){!n.isConnected()}function i(e,n){o(),s(),t.$apply()}function r(e,n){o(),s(),u(),t.$apply()}var c=this;c.isConnected=n.isConnected;var p="#3D3E3F";c.wheelLabels=["Empty"],c.wheelData=[5],c.wheelColours=[p];var l="0xaCD9e1e68622285Cc3d339D04b76BA7acEE6FC1C",m=null;a()}e.$inject=["$route","$scope","ethereum"],angular.module("ether-spinner").controller("SpinnerCtrl",e)}(),function(){"use strict";function e(){function e(){n.web3.setProvider(new n.web3.providers.HttpProvider("http://localhost:8545"))}function t(){return n.web3.currentProvider.isConnected()}var n={web3:new Web3,isConnected:t};return e(),n}angular.module("ether-spinner").service("ethereum",e)}();
//# sourceMappingURL=data:application/json;base64,
